routing refers to the process of determining how an application responds to a client request for a specific URL path and 
HTTP method (e.g., GET, POST, PUT, DELETE). 

Different Types Of URL :

Static URLs
A static URL is a fixed, unchanging URL that points to a specific resource. These URLs don't have parameters or variables in them.

Example:
/about

Dynamic URLs (Parameterized URLs)
Dynamic URLs contain placeholders or parameters that can change to represent different data. These are often used for user-specific content or querying resources by ID.

Example:
/user/123: Represents a user with an ID of 123.

you can define dynamic routes using the colon (:) notation:

Query Parameters
Query parameters allow you to pass additional data to the server in the form of key-value pairs. These appear after a question mark (?) in the URL and are typically used to filter or sort data.

Example:
/search?q=books: This is a URL with a query parameter q=books, which might represent a search query for "books."

RESTful URLs
In RESTful web services, URLs are designed to represent resources and actions using HTTP methods (GET, POST, PUT, DELETE, etc.). 
The URL is often noun-based, representing resources like "users" or "orders".

Example:
GET /users: Fetches a list of users.
GET /users/123: Fetches details for a user with ID 123.
POST /users: Creates a new user.
PUT /users/123: Updates the details of user 123.
DELETE /users/123: Deletes the user with ID 123.


Hierarchical URLs
These URLs have a nested structure and represent hierarchical data. They typically involve categories, subcategories, and resource identifiers.

Example:
/categories/electronics/phones/123: This could represent a product with ID 123 under the "phones" subcategory of the "electronics" category.

File-based URLs
Some URLs refer directly to files, such as images, documents, or scripts. These are often used for static assets or downloadable resources.

Example:
/images/logo.png: Refers to an image file.


Absolute vs. Relative URLs
Absolute URLs: Full URLs that include the protocol (http or https), domain, and path.

Example: https://www.example.com/about
Relative URLs: Shorter URLs that only define the path relative to the current location.

Example: /about, /products


